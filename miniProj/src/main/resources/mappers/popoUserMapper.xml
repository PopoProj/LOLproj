<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.miniProj.model.PopoUserDAO">

	<!-- Popo resultmap 정의 -->
	<resultMap
		type="com.my.miniProj.model.PopoUserDTO" id="popoMap">
		<id property="popoNum" column="POPO_NUM" />
		<result property="popoId" column="POPO_ID" />
		<result property="popoPw" column="POPO_PW" />
		<result property="popoName" column="POPO_NAME" />
		<result property="popoTel" column="POPO_TEL" />
		<result property="popoEmail" column="POPO_EMAIL" />
		<result property="popoNickname" column="POPO_NICKNAME" />
		<result property="popoMain" column="POPO_MAIN" />
		<result property="popoSub" column="POPO_SUB" />
		<result property="popoDate" column="POPO_DATE" />
		<result property="popoQuit" column="POPO_QUIT" />
		<result property="popoBan" column="POPO_BAN" />

	</resultMap>
	
	<resultMap
		type="com.my.miniProj.model.AdminDTO" id="adminMap">
		<result property="adminId" column="ADMIN_ID" />
		<result property="adminPw" column="ADMIN_PW" />
	</resultMap>
	
	<!-- PopoAuth resultmap 정의 
	<resultMap
		type="com.my.miniProj.popo.model.PopoAuth" id="authMap">
		<result property="popoNum" column="POPO_NUM" />
		<result property="popoAuth" column="POPO_AUTH" />
	</resultMap>
	-->
	
	<select id = "loginAction" parameterType = "String" resultMap = "popoMap">
		SELECT *
		FROM popouser
		WHERE popo_id = #{id} AND popo_pw = #{pw} AND popo_quit = 0
	
	</select> 
	
	
	<select id = "adminLoginAction" parameterType = "String" resultMap = "adminMap">
		SELECT *
		FROM popoadmin
		WHERE admin_id = #{id} AND admin_pw = #{pw}
	
	</select> 
	
	
	<!-- 회원 아이디 찾기 -->
	<select id="findId" resultType="String" parameterType = "String">
		SELECT POPO_ID
		FROM POPOUSER
		WHERE POPO_NAME = #{name} and POPO_EMAIL = #{email} AND popo_quit = 0
	</select>
	
	<!-- 회원 비밀번호 업데이트
	<update id="updatePassword" parameterType="com.my.miniProj.model.PopoUserDTO">
		UPDATE POPOUSER SET POPO_PW = #{popoPw}
		WHERE POPO_ID = #{popoId} and POPO_EMAIL = #{popoEmail}
	</update> -->

	<!-- 아이디 읽어오기(로그인)
	<select id="readByUserId" resultType="com.my.miniProj.model.PopoUserDTO" parameterType="String">
		SELECT popo.POPO_NUM,
		popo.POPO_ID, popo.*,
		POPO_AUTH
		FROM POPOUSER
		POPOUSER popo LEFT OUTER JOIN POPO_AUTH auth ON
		popo.POPO_NUM = auth.POPO_NUM
		WHERE popo.POPO_ID = #{popoId}
	</select> -->
	
	<!-- 회원가입 -->
	<select id="checkDuplicate" resultType="int" parameterType="String">
		SELECT count(*)
		FROM POPOUSER
		WHERE POPO_ID = #{popoId}
	</select>
	
	<select id="checkDuplicateEmail" resultType="int" parameterType="String">
		SELECT count(*)
		FROM POPOUSER
		WHERE POPO_email = #{popoEmail}
	</select>
	
	

	<insert id="registerUser" parameterType = "com.my.miniProj.model.PopoUserDTO">
		INSERT INTO POPOUSER (
		POPO_NUM,
		POPO_ID,
		POPO_PW,
		POPO_NAME,
		POPO_TEL,
		POPO_EMAIL,
		POPO_NICKNAME,
		POPO_MAIN,
		POPO_SUB,
		POPO_DATE,
		POPO_QUIT,
		POPO_BAN
		)
		VALUES (
		POPOUSER_SEQ.nextval,
		#{popoId},
		#{popoPw},
		#{popoName},
		#{popoTel},
		#{popoEmail},
		#{popoNickname},
		#{popoMain},
		#{popoSub},
		SYSDATE,
		0,
		0
		)
	</insert>
	
	<!-- 회원가입 시 권한 부여
	<insert id="createAuth">
		INSERT INTO POPO_AUTH
		(
		POPO_NUM,
		POPO_AUTH
		)
		VALUES
		(
		POPOUSER_SEQ.CURRVAL,
		ROLE_POPO
		)
	</insert> -->
	
	<!-- 마이페이지 회원정보
	<select id="getUserById" parameterType = "String" resultMap = "popoMap">
		SELECT POPO_NUM,
		POPO_ID,
		POPO_PW,
		POPO_NAME,
		POPO_TEL,
		POPO_EMAIL,
		POPO_NICKNAME,
		POPO_MAIN,
		POPO_SUB,
		POPO_DATE,
		POPO_QUIT,
		POPO_BAN
		FROM POPOUSER
		WHERE POPO_ID = #{popoId}
	</select> -->

	<!-- 마이페이지 회원수정 -->
	<update id="updateInfo" parameterType = "com.my.miniProj.model.PopoUserDTO">
		UPDATE POPOUSER
		SET POPO_PW=#{popoPw},
			POPO_NAME=#{popoName},
			POPO_TEL=#{popoTel},
			POPO_EMAIL=#{popoEmail},
			POPO_NICKNAME=#{popoNickname},
			POPO_MAIN=#{popoMain},
			POPO_SUB=#{popoSub}
		WHERE POPO_ID=#{popoId}
	</update>

	<!-- 관리자 -->
	<!-- 회원 목록 조회--> 
	<select id="popoList" parameterType="Pages" resultMap="popoMap">
<![CDATA[
SELECT POPO_NUM,
       POPO_ID,
       POPO_NAME,
       POPO_TEL,
       POPO_EMAIL,
       POPO_NICKNAME,
       POPO_MAIN,
       POPO_SUB,
       POPO_DATE,
       POPO_QUIT,
       POPO_BAN
FROM (
    SELECT B.POPO_Num,
           B.POPO_ID,
           B.POPO_NAME,
           B.POPO_TEL,
           B.POPO_EMAIL,
           B.POPO_NICKNAME,
           B.POPO_MAIN,
           B.POPO_SUB,
           B.POPO_DATE,
           B.POPO_QUIT,
           B.POPO_BAN,
           ROWNUM AS rnum
    FROM (
        SELECT POPO_NUM,
               POPO_ID,
               POPO_NAME,
               POPO_TEL,
               POPO_EMAIL,
               POPO_NICKNAME,
               POPO_MAIN,
               POPO_SUB,
               POPO_DATE,
               POPO_QUIT,
               POPO_BAN
        FROM POPOUSER
        ORDER BY POPO_DATE DESC, POPO_NUM DESC
    	)
    	B
		)
		where rnum between #{sizePerPage}*#{page}-9 and #{sizePerPage}*#{page}
]]>
	</select>
	
	<!-- 전체 인원수를 조회 -->
	<select id="countUsers" resultType="int">
	<![CDATA[
	SELECT count(POPO_NUM)
	 FROM POPOUSER
	WHERE POPO_NUM > 0
	]]>
	</select>

	<!-- 회원 차단 -->
	<update id="banUser" parameterType="int">
		UPDATE POPOUSER
		SET POPO_BAN = 1
		WHERE POPO_NUM = #{popoNum}
	</update>
	
	<!-- 회원 차단해제 -->
	<update id="unbanUser" parameterType="int">
		UPDATE POPOUSER
		SET POPO_BAN = 0
		WHERE POPO_NUM = #{popoNum}
	</update>

	<select id = "checkBan" parameterType = "String" resultType="int">
		SELECT popo_ban FROM popouser WHERE popo_id = #{popoId}
	</select>
	
	<update id="quitUser" parameterType="com.my.miniProj.model.PopoUserDTO">
		UPDATE popouser SET popo_quit = 1 WHERE popo_num = #{popoNum}
	</update>
	
	<!-- id로 포포 가져오기 -->
	<select id="getPopoById" parameterType = "String" resultMap="popoMap">
		SELECT * FROM POPOUSER WHERE POPO_ID=#{popoId}
	</select>
</mapper>